// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectPendragonBackend.Data;

#nullable disable

namespace ProjectPendragonBackend.Migrations
{
    [DbContext(typeof(ProjectPendragonDbContext))]
    [Migration("20230202154622_SkillIdNameChange")]
    partial class SkillIdNameChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjectPendragonBackend.Models.Attributes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("App")
                        .HasColumnType("int");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Con")
                        .HasColumnType("int");

                    b.Property<int>("Dex")
                        .HasColumnType("int");

                    b.Property<int>("Siz")
                        .HasColumnType("int");

                    b.Property<int>("Str")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Character", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BirthNumber")
                        .HasColumnType("int");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<int>("Culture")
                        .HasColumnType("int");

                    b.Property<string>("DistinctiveFeatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Glory")
                        .HasColumnType("int");

                    b.Property<string>("Home")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LiegeLord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Religion")
                        .HasColumnType("int");

                    b.Property<int>("YearBorn")
                        .HasColumnType("int");

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.CombatSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillsId");

                    b.ToTable("CombatSkill");
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.CoreSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkillsId");

                    b.ToTable("CoreSkill");
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Date", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Current")
                        .HasColumnType("bit");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Passion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("Passion");
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Skills", b =>
                {
                    b.Property<Guid>("SkillsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SkillsId");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Traits", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Chaste")
                        .HasColumnType("int");

                    b.Property<int>("Energetic")
                        .HasColumnType("int");

                    b.Property<int>("Forgiving")
                        .HasColumnType("int");

                    b.Property<int>("Generous")
                        .HasColumnType("int");

                    b.Property<int>("Honest")
                        .HasColumnType("int");

                    b.Property<int>("Just")
                        .HasColumnType("int");

                    b.Property<int>("Merciful")
                        .HasColumnType("int");

                    b.Property<int>("Modest")
                        .HasColumnType("int");

                    b.Property<int>("Pious")
                        .HasColumnType("int");

                    b.Property<int>("Prudent")
                        .HasColumnType("int");

                    b.Property<int>("Temperate")
                        .HasColumnType("int");

                    b.Property<int>("Trusting")
                        .HasColumnType("int");

                    b.Property<int>("Valorous")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Traits");
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Wealth", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Denari")
                        .HasColumnType("int");

                    b.Property<int>("Libra")
                        .HasColumnType("int");

                    b.Property<int>("Shilling")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Wealth");
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Attributes", b =>
                {
                    b.HasOne("ProjectPendragonBackend.Models.Character", null)
                        .WithOne("Attributes")
                        .HasForeignKey("ProjectPendragonBackend.Models.Attributes", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.CombatSkill", b =>
                {
                    b.HasOne("ProjectPendragonBackend.Models.Skills", null)
                        .WithMany("Combat")
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.CoreSkill", b =>
                {
                    b.HasOne("ProjectPendragonBackend.Models.Skills", null)
                        .WithMany("Core")
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Passion", b =>
                {
                    b.HasOne("ProjectPendragonBackend.Models.Character", null)
                        .WithMany("Passions")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Skills", b =>
                {
                    b.HasOne("ProjectPendragonBackend.Models.Character", null)
                        .WithOne("Skills")
                        .HasForeignKey("ProjectPendragonBackend.Models.Skills", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Traits", b =>
                {
                    b.HasOne("ProjectPendragonBackend.Models.Character", null)
                        .WithOne("Traits")
                        .HasForeignKey("ProjectPendragonBackend.Models.Traits", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Wealth", b =>
                {
                    b.HasOne("ProjectPendragonBackend.Models.Character", null)
                        .WithOne("Wealth")
                        .HasForeignKey("ProjectPendragonBackend.Models.Wealth", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Character", b =>
                {
                    b.Navigation("Attributes")
                        .IsRequired();

                    b.Navigation("Passions");

                    b.Navigation("Skills")
                        .IsRequired();

                    b.Navigation("Traits")
                        .IsRequired();

                    b.Navigation("Wealth")
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectPendragonBackend.Models.Skills", b =>
                {
                    b.Navigation("Combat");

                    b.Navigation("Core");
                });
#pragma warning restore 612, 618
        }
    }
}
